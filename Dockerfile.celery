# Use an official Python runtime as a parent image
FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PYTHONPATH /app
# Note: APP_SETTINGS (for Flask app context in tasks) should be set in docker-compose.yml or runtime environment
# ENV APP_SETTINGS=project.config.ProductionConfig # Example

# Set the working directory in the container
WORKDIR /app

# Install system dependencies (same as main Dockerfile for consistency)
RUN apt-get update && apt-get install -y --no-install-recommends \
    tesseract-ocr \
    libgl1-mesa-glx \
    poppler-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy the requirements file into the container at /app
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container at /app
# This ensures joblo_core, etc., are available.
COPY . .

# Command to run the Celery worker
# Ensure celery is in the PATH or call it via python -m celery
CMD ["python", "-m", "celery", "-A", "project.celery_app.celery", "worker", "-l", "info"] 